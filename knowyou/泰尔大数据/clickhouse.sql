ALTER TABLE knowyou_ott_ods.odm_tair_samplepoint_dm ADD COLUMNS(
  `task_type` string COMMENT '',
  `taskid` string COMMENT '',
  `test_planid` string COMMENT ''
)




    get_json_object(j.info,'$.taskType') AS taskType,
    get_json_object(j.info,'$.taskId') AS taskId,
    get_json_object(j.info,'$.testPlanId') AS testPlanId,

CREATE TABLE IF NOT EXISTS knowyou_ott_ods.odm_tair_samplepoint_dm(
deviceid    string,
group_id    int,
test_guid       string,
test_type    int,
scene_type    int,
scene_name    string,
scene_mark    string,
handset_time  string,
operator_id   int,
network_class  int,
network_type  int,
sp_type    int,
app_dlrate   string,
app_ulrate   string,
ping_delay   int,
vmos    float,
cell_name   string,
cell_distance  int,
is_interference  int,
is_overlap   int,
is_no_major_cell  int,
is_cross_coverage  int,
lte_tac    bigint,
lte_eci    bigint,
lte_earfcn   bigint,
lte_enod_bid  bigint,
lte_cellid   int,
lte_pci    int,
lte_rsrp   int,
lte_sinr   float,
lte_rsrq   int,
nr_type    int,
nr_tac    bigint,
nr_eci    bigint,
nr_earfcn   bigint,
nr_enod_bid   bigint,
nr_cellid   int,
nr_pci    int,
nr_rsrp    int,
nr_sinr    float,
nr_rsrq    int,
wifi_manufacturer  string,
wifi_name   string,
wifi_mac   string,
wifi_freq   int,
wifi_strenth  int,
wifi_operator_id  int,
latitude   string,
longitude   string,
grid_id    string,
grid_length   int,
province   string,
city    string,
district   string,
msgtype    string,
process_time  string,
reportdate   string,

  `task_name` string COMMENT 'New Fields from here to end.2022.08.05',
  `task_type` string COMMENT '',
  `task_id` string COMMENT '',
  `test_planid` string COMMENT ''
)
PARTITIONED BY (dt string,ht string)
STORED AS orc tblproperties("orc.compress"="SNAPPY")

ALTER TABLE knowyou_ott_ods.odm_tair_samplepoint_dm change task_id taskid string
ALTER TABLE knowyou_ott_ods.odm_tair_samplepoint_dm REPLACE COLUMNS 
(
deviceid    string,
group_id    int,
test_guid       string,
test_type    int,
scene_type    int,
scene_name    string,
scene_mark    string,
handset_time  string,
operator_id   int,
network_class  int,
network_type  int,
sp_type    int,
app_dlrate   string,
app_ulrate   string,
ping_delay   int,
vmos    float,
cell_name   string,
cell_distance  int,
is_interference  int,
is_overlap   int,
is_no_major_cell  int,
is_cross_coverage  int,
lte_tac    bigint,
lte_eci    bigint,
lte_earfcn   bigint,
lte_enod_bid  bigint,
lte_cellid   int,
lte_pci    int,
lte_rsrp   int,
lte_sinr   float,
lte_rsrq   int,
nr_type    int,
nr_tac    bigint,
nr_eci    bigint,
nr_earfcn   bigint,
nr_enod_bid   bigint,
nr_cellid   int,
nr_pci    int,
nr_rsrp    int,
nr_sinr    float,
nr_rsrq    int,
wifi_manufacturer  string,
wifi_name   string,
wifi_mac   string,
wifi_freq   int,
wifi_strenth  int,
wifi_operator_id  int,
latitude   string,
longitude   string,
grid_id    string,
grid_length   int,
province   string,
city    string,
district   string,
msgtype    string,
process_time  string,
reportdate   string,
task_type string COMMENT '',
taskid string COMMENT '',
test_planid string COMMENT ''
)


--------------clickhouse
-- product
insert into taier_ott_odsnew.pointdt
(
    handset_time,
    deviceid,
    groupid,
    test_guid,
    operatorid,
    network_class,
    network_type,
    testtype,
    sp_type,
    scene_type,
    scene_name,
    scene_mark,
    app_ulrate,
    app_dlrate,
    ping_delay,
    vmos,
    cellname,
    celldistance,
    isinterference,
    isoverlap,
    isnomajorcell,
    iscrosscoverage,
    lte_tac,
    lte_eci,
    lte_earfcn,
    lte_enodbid,
    lte_cellid,
    lte_pci,
    lte_rsrp,
    lte_sinr,
    lte_rsrq,
    nr_type,
    nr_tac,
    nr_eci,
    nr_earfcn,
    nr_enodbid,
    nr_cellid,
    nr_pci,
    nr_rsrp,
    nr_sinr,
    nr_rsrq,
    wifi_manufacturer,
    wifi_name,
    wifi_mac,
    wifi_freq,
    wifi_strenth,
    wifi_operatorid,
    grid_id,
    grid_length,
    province,
    city,
    district,
    latitude,
    longitude,
    addtime,
    dt
)
select 
    handset_time,
    deviceid,
    groupid,
    test_guid,
    operatorid,
    network_class,
    network_type,
    testtype,
    sp_type,
    scene_type,
    scene_name,
    scene_mark,
    app_ulrate,
    app_dlrate,
    ping_delay,
    vmos,
    cellname,
    celldistance,
    isinterference,
    isoverlap,
    isnomajorcell,
    iscrosscoverage,
    lte_tac,
    lte_eci,
    lte_earfcn,
    lte_enodbid,
    lte_cellid,
    lte_pci,
    lte_rsrp,
    lte_sinr,
    lte_rsrq,
    nr_type,
    nr_tac,
    nr_eci,
    nr_earfcn,
    nr_enodbid,
    nr_cellid,
    nr_pci,
    nr_rsrp,
    nr_sinr,
    nr_rsrq,
    wifi_manufacturer,
    wifi_name,
    wifi_mac,
    wifi_freq,
    wifi_strenth,
    wifi_operatorid,
    grid_id,
    grid_length,
    province,
    city,
    district,
    latitude,
    longitude,
    addtime,
    dt
from taier_ott_odsnew.pointdt_sk





-- local
ALTER TABLE taier_ott_odsnew.pointdt ADD COLUMN IF NOT EXISTS  task_type String ;
ALTER TABLE taier_ott_odsnew.pointdt ADD COLUMN IF NOT EXISTS  taskid String, 
MODIFY ORDER BY (province, city, grid_id, deviceId, taskid, handset_time);
ALTER TABLE taier_ott_odsnew.pointdt ADD COLUMN IF NOT EXISTS  test_planid String;

ALTER TABLE taier_ott_odsnew.pointdt  
MODIFY ORDER BY (province, city, grid_id, deviceId, taskid, handset_time);

ALTER TABLE taier_ott_odsnew.dws_tair_grid_dm ADD COLUMN IF NOT EXISTS  taskid String,
MODIFY ORDER BY (province, city, grid_id, deviceid, nr_type, network_class, htime, taskid);

ALTER TABLE taier_ott_odsnew.dws_tair_grid_dm  
MODIFY ORDER BY (province, city, grid_id, deviceid, nr_type, network_class, taskid, htime);



ALTER TABLE taier_ott_odsnew.pointdt ADD COLUMN IF NOT EXISTS  taskid String, 
MODIFY ORDER BY (deviceId, province, city, taskid);
ALTER TABLE taier_ott_odsnew.pointdt DROP COLUMN IF EXISTS taskid;
ALTER TABLE taier_ott_odsnew.pointdt DROP COLUMN IF EXISTS task_type;
ALTER TABLE taier_ott_odsnew.pointdt DROP COLUMN IF EXISTS test_planid;
ALTER TABLE taier_ott_odsnew.pointdt MODIFY ORDER BY (deviceId, province, city)


ALTER TABLE taier_ott_odsnew.pointdt RENAME CLOUM
DROP TABLE taier_ott_odsnew.pointdt;
CREATE TABLE taier_ott_odsnew.pointdt
(
    `handset_time` DateTime64(3),
    `deviceid` String,
    `groupid` Nullable(Int32),
    `test_guid` Nullable(String),
    `operatorid` Nullable(Int32),
    `network_class` Nullable(Int32),
    `network_type` Nullable(Int32),
    `testtype` Nullable(Int32),
    `sp_type` Nullable(Int32),
    `scene_type` Nullable(Int32),
    `scene_name` Nullable(String),
    `scene_mark` Nullable(String),
    `app_ulrate` Nullable(Decimal(32, 6)),
    `app_dlrate` Nullable(Decimal(32, 6)),
    `ping_delay` Nullable(Int32),
    `vmos` Nullable(Decimal(32, 6)),
    `cellname` Nullable(String),
    `celldistance` Nullable(Int32),
    `isinterference` Nullable(Int32),
    `isoverlap` Nullable(Int32),
    `isnomajorcell` Nullable(Int32),
    `iscrosscoverage` Nullable(Int32),
    `lte_tac` Nullable(Int64),
    `lte_eci` Nullable(Int64),
    `lte_earfcn` Nullable(Int64),
    `lte_enodbid` Nullable(Int64),
    `lte_cellid` Nullable(Int32),
    `lte_pci` Nullable(Int32),
    `lte_rsrp` Nullable(Int32),
    `lte_sinr` Nullable(Decimal(32, 6)),
    `lte_rsrq` Nullable(Int32),
    `nr_type` Nullable(Int32),
    `nr_tac` Nullable(Int64),
    `nr_eci` Nullable(Int64),
    `nr_earfcn` Nullable(Int64),
    `nr_enodbid` Nullable(Int64),
    `nr_cellid` Nullable(Int32),
    `nr_pci` Nullable(Int32),
    `nr_rsrp` Nullable(Int32),
    `nr_sinr` Nullable(Decimal(32, 6)),
    `nr_rsrq` Nullable(Int32),
    `wifi_manufacturer` Nullable(String),
    `wifi_name` Nullable(String),
    `wifi_mac` Nullable(String),
    `wifi_freq` Nullable(Int32),
    `wifi_strenth` Nullable(Int32),
    `wifi_operatorid` Nullable(Int32),
    `grid_id` String,
    `grid_length` Nullable(Int32),
    `province` String,
    `city` String,
    `district` Nullable(String),
    `latitude` Nullable(Decimal(32, 6)),
    `longitude` Nullable(Decimal(32, 6)),
    `addtime` Nullable(DateTime),
    `dt` String,
    `task_type` Nullable(Int32),
    `taskid` Int64,
    `test_planid` Nullable(Int64)
)
ENGINE = MergeTree()
PARTITION BY dt
PRIMARY KEY (province, city, grid_id, deviceId)
ORDER BY (province, city, grid_id, deviceId, taskid, handset_time)
SETTINGS index_granularity = 8192;

insert into pointdt 
(
handset_time,
deviceId,
groupid,
test_guid,
operatorid,
network_class,
network_type,
testtype,
sp_type,
scene_type,
scene_name,
scene_mark,
app_ulrate,
app_dlrate,
ping_delay,
vmos,
cellname,
celldistance,
isinterference,
isoverlap,
isnomajorcell,
iscrosscoverage,
lte_tac,
lte_eci,
lte_earfcn,
lte_enodbid,
lte_cellid,
lte_pci,
lte_rsrp,
lte_sinr,
lte_rsrq,
nr_type,
nr_tac,
nr_eci,
nr_earfcn,
nr_enodbid,
nr_cellid,
nr_pci,
nr_rsrp,
nr_sinr,
nr_rsrq,
wifi_manufacturer,
wifi_name,
wifi_mac,
wifi_freq,
wifi_strenth,
wifi_operatorid,
grid_id,
grid_length,
province,
city,
district,
latitude,
longitude,
addtime,
dt
)
select 
handset_time,
deviceId,
groupid,
test_guid,
operatorid,
network_class,
network_type,
testtype,
sp_type,
scene_type,
scene_name,
scene_mark,
app_ulrate,
app_dlrate,
ping_delay,
vmos,
cellname,
celldistance,
isinterference,
isoverlap,
isnomajorcell,
iscrosscoverage,
lte_tac,
lte_eci,
lte_earfcn,
lte_enodbid,
lte_cellid,
lte_pci,
lte_rsrp,
lte_sinr,
lte_rsrq,
nr_type,
nr_tac,
nr_eci,
nr_earfcn,
nr_enodbid,
nr_cellid,
nr_pci,
nr_rsrp,
nr_sinr,
nr_rsrq,
wifi_manufacturer,
wifi_name,
wifi_mac,
wifi_freq,
wifi_strenth,
wifi_operatorid,
grid_id,
grid_length,
province,
city,
district,
latitude,
longitude,
addtime,
dt
from pointdt_sk;


--------

ALTER TABLE taier_ott_odsnew.special_pointdt ADD COLUMN IF NOT EXISTS  task_type Nullable(Int32) ;
ALTER TABLE taier_ott_odsnew.special_pointdt ADD COLUMN IF NOT EXISTS  taskid Int64, 
MODIFY ORDER BY (province, city, grid_id, deviceId, taskid, handset_time); 达咩德斯
ALTER TABLE taier_ott_odsnew.special_pointdt ADD COLUMN IF NOT EXISTS  test_planid Nullable(Int64);


DROP TABLE taier_ott_odsnew.special_pointdt
CREATE TABLE taier_ott_odsnew.special_pointdt
(
    `handset_time` DateTime64(3),
    `deviceId` String,
    `groupid` Nullable(Int32),
    `test_guid` Nullable(String),
    `operatorid` Nullable(Int32),
    `network_class` Nullable(Int32),
    `network_type` Nullable(Int32),
    `testtype` Nullable(Int32),
    `sp_type` Nullable(Int32),
    `scene_type` Nullable(Int32),
    `scene_name` Nullable(String),
    `scene_mark` Nullable(String),
    `app_ulrate` Nullable(Decimal(32, 6)),
    `app_dlrate` Nullable(Decimal(32, 6)),
    `ping_delay` Nullable(Int32),
    `vmos` Nullable(Decimal(32, 6)),
    `cellname` Nullable(String),
    `celldistance` Nullable(Int32),
    `isinterference` Nullable(Int32),
    `isoverlap` Nullable(Int32),
    `isnomajorcell` Nullable(Int32),
    `iscrosscoverage` Nullable(Int32),
    `lte_tac` Nullable(Int64),
    `lte_eci` Nullable(Int64),
    `lte_earfcn` Nullable(Int64),
    `lte_enodbid` Nullable(Int64),
    `lte_cellid` Nullable(Int32),
    `lte_pci` Nullable(Int32),
    `lte_rsrp` Nullable(Int32),
    `lte_sinr` Nullable(Decimal(32, 6)),
    `lte_rsrq` Nullable(Int32),
    `nr_type` Nullable(Int32),
    `nr_tac` Nullable(Int64),
    `nr_eci` Nullable(Int64),
    `nr_earfcn` Nullable(Int64),
    `nr_enodbid` Nullable(Int64),
    `nr_cellid` Nullable(Int32),
    `nr_pci` Nullable(Int32),
    `nr_rsrp` Nullable(Int32),
    `nr_sinr` Nullable(Decimal(32, 6)),
    `nr_rsrq` Nullable(Int32),
    `wifi_manufacturer` Nullable(String),
    `wifi_name` Nullable(String),
    `wifi_mac` Nullable(String),
    `wifi_freq` Nullable(Int32),
    `wifi_strenth` Nullable(Int32),
    `wifi_operatorid` Nullable(Int32),
    `grid_id` String,
    `grid_length` Nullable(Int32),
    `province` String,
    `city` String,
    `district` Nullable(String),
    `latitude` Nullable(Decimal(32, 6)),
    `longitude` Nullable(Decimal(32, 6)),
    `addtime` Nullable(DateTime),
    `dt` String,
    `task_type` Nullable(Int32),
    `taskid` Int64,
    `test_planid` Nullable(Int64)
)
ENGINE = MergeTree()
PARTITION BY dt
PRIMARY KEY (province, city, grid_id, deviceId)
ORDER BY (province, city, grid_id, deviceId, taskid, handset_time)
SETTINGS index_granularity = 8192;

insert into taier_ott_odsnew.special_pointdt
(
handset_time,
deviceId,
groupid,
test_guid,
operatorid,
network_class,
network_type,
testtype,
sp_type,
scene_type,
scene_name,
scene_mark,
app_ulrate,
app_dlrate,
ping_delay,
vmos,
cellname,
celldistance,
isinterference,
isoverlap,
isnomajorcell,
iscrosscoverage,
lte_tac,
lte_eci,
lte_earfcn,
lte_enodbid,
lte_cellid,
lte_pci,
lte_rsrp,
lte_sinr,
lte_rsrq,
nr_type,
nr_tac,
nr_eci,
nr_earfcn,
nr_enodbid,
nr_cellid,
nr_pci,
nr_rsrp,
nr_sinr,
nr_rsrq,
wifi_manufacturer,
wifi_name,
wifi_mac,
wifi_freq,
wifi_strenth,
wifi_operatorid,
grid_id,
grid_length,
province,
city,
district,
latitude,
longitude,
addtime,
dt
)
select 
handset_time,
deviceId,
groupid,
test_guid,
operatorid,
network_class,
network_type,
testtype,
sp_type,
scene_type,
scene_name,
scene_mark,
app_ulrate,
app_dlrate,
ping_delay,
vmos,
cellname,
celldistance,
isinterference,
isoverlap,
isnomajorcell,
iscrosscoverage,
lte_tac,
lte_eci,
lte_earfcn,
lte_enodbid,
lte_cellid,
lte_pci,
lte_rsrp,
lte_sinr,
lte_rsrq,
nr_type,
nr_tac,
nr_eci,
nr_earfcn,
nr_enodbid,
nr_cellid,
nr_pci,
nr_rsrp,
nr_sinr,
nr_rsrq,
wifi_manufacturer,
wifi_name,
wifi_mac,
wifi_freq,
wifi_strenth,
wifi_operatorid,
grid_id,
grid_length,
province,
city,
district,
latitude,
longitude,
addtime,
dt
from taier_ott_odsnew.special_pointdt_sk