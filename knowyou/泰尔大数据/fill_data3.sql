set hive.exec.dynamic.partition.mode=nonstrict;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220701' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220701' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220702' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220702' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220703' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220703' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220704' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220704' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220705' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220705' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220706' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220706' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220707' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220707' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220708' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220708' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220709' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220709' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220710' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220710' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;


INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220711' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220711' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220712' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220712' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220713' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220713' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220714' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220714' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220715' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220715' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220716' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220716' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220717' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220717' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220718' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220718' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220719' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220719' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220720' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220720' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220721' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220721' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220722' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220722' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220723' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='202207123' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220724' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220724' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220725' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220725' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220726' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220726' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220727' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220727' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;

INSERT overwrite TABLE knowyou_ott_ods.dws_tair_grid_dm partition(dt,ht)
SELECT 	deviceid,group_id,operator_id,network_class,nr_type,grid_id,
		max(grid_length) as grid_length,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_lefttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5),4) as grid_lefttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5),4) as grid_leftdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_leftdown_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_righttop_x,
		round((split(grid_id,'-')[1]*0.0005 +3.5000),4) as grid_righttop_y,
		round((split(grid_id,'-')[0]*0.0005 +73.5005),4) as grid_rightdown_x,
		round((split(grid_id,'-')[1]*0.0005 +3.4995),4) as grid_rightdown_y,
		province,
		city,
		max(district) as district,
		scientific_trans(sum((case when app_dlrate=-10000 then 0 else app_dlrate end))) as app_dlrate_tv,
		sum((case when app_dlrate=-10000 then 0 else 1 end)) as app_dlrate_tc,
		scientific_trans(sum((case when app_ulrate=-10000 then 0 else app_ulrate end))) as app_ulrate_tv,
		sum((case when app_ulrate=-10000 then 0 else 1 end) ) as app_ulrate_tc,
		scientific_trans(sum((case when ping_delay=-10000 then 0 else ping_delay end))) as ping_delay_tv,
		sum((case when ping_delay=-10000 then 0 else 1 end) ) as ping_delay_tc,
		scientific_trans(sum((case when vmos=-10000 then 0 else vmos end))) as vmos_tv,
		sum((case when vmos=-10000 then 0 else 1 end) ) as vmos_tc,
		sum((case when is_interference=-10000 then 0 else 1 end) ) as is_interference,
		sum((case when is_overlap=-10000 then 0 else 1 end) ) as is_overlap,
		sum((case when is_no_major_cell=-10000 then 0 else 1 end) ) as is_no_major_cell,
		sum((case when is_cross_coverage=-10000 then 0 else 1 end) ) as is_cross_coverage,
		scientific_trans(sum((case when lte_rsrp=-10000 then 0 else lte_rsrp end))) as lte_rsrp_tv,
		sum((case when lte_rsrp=-10000 then 0 else 1 end) ) as lte_rsrp_tc,
		scientific_trans(sum((case when lte_sinr=-10000 then 0 else lte_sinr end))) as lte_sinr_tv,
		sum((case when lte_sinr=-10000 then 0 else 1 end) ) as lte_sinr_tc,
		scientific_trans(sum((case when lte_rsrq=-10000 then 0 else lte_rsrq end))) as lte_rsrq_tv,
		sum((case when lte_rsrq=-10000 then 0 else 1 end) ) as lte_rsrq_tc,
		scientific_trans(sum((case when nr_rsrp=-10000 then 0 else nr_rsrp end))) as nr_rsrp_tv,
		sum((case when nr_rsrp=-10000 then 0 else 1 end) ) as nr_rsrp_tc,
		scientific_trans(sum((case when nr_sinr=-10000 then 0 else nr_sinr end))) as nr_sinr_tv,
		sum((case when nr_sinr=-10000 then 0 else 1 end) ) as nr_sinr_tc,
		scientific_trans(sum((case when nr_rsrq=-10000 then 0 else nr_rsrq end))) as nr_rsrq_tv,
		sum((case when nr_rsrq=-10000 then 0 else 1 end) ) as nr_rsrq_tc,
		scientific_trans(sum((case when wifi_strenth=-10000 then 0 else wifi_strenth end))) as wifi_strenth_tv,
		sum((case when wifi_strenth=-10000 then 0 else 1 end) ) as wifi_strenth_tc,
		htime,
		'20220728' as dt, 
		ht
FROM(
SELECT *, date_format(handset_time,'yyyy-MM-dd HH:00:00') as htime FROM knowyou_ott_ods.odm_tair_samplepoint_dm
where dt='20220728' and size(split(grid_id,'-'))=2 and grid_id !='-10000'
)a
group by deviceid,group_id,operator_id,network_class,nr_type,grid_id,province,city,htime,ht;
